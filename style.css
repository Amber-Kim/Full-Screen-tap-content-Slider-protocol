/* Google Web Font */
@import url('https://fonts.googleapis.com/css?family=Raleway&display=swap');

/* Google Web Fonts CDN */
@import url('htmls://fonts.googleapis.com/css?family=Noto+Sans+KR:300,400,500,700,900&display=swap');

/* Fontawesome 4.7 */
@import url('https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css');

body {
    font-family: 'Raleway', sans-serif;
    color: #222;
    line-height: 1.5em;
    font-weight: 300;
    margin: 0;
}

a {
    color: #222;
    text-decoration: none;
}

input[name=tabmenu] {
    display: none;
}

/* 100vh == viewport height 즉, 모니터 화면의 높이를 기준으로 full screen 하겠다라는 뜻, 밖으로 너비x높이=테두리 밖으로 빠져나간건 overflow로 가리겠음*/
.tabs {
    overflow: hidden;
    position: relative;
    height: 100vh;
}

/* 화면의 큰 테두리. 천천히 화면 이동하도록 transition을 사용, 자식요소, 자식요소는 떠돌이이기 때문에 top + left로 꼭 기본적인 자리를 배치시켜주어야 함 
3 part니까 100% (꽉 찬 화면) * 3개 = 300% */
.items {
    width: 300%;
    transition: 0.5s;
    position: absolute;
    top: 0;
    left: 0;
}

/* 화면에 실리는 제목 크기 + 중앙정렬 + 만약 테두리 밖으로 빠져나가는 요소가 있다면 box-sizing을 이용해 지우기  */
.items div {
    height: 100vh;
    float: left;
    width: 33.33333%;
    box-sizing: border-box;
    position: relative;
}

/* 부모요소 display: relative를 사용한 이유 = 현재 페이지 layer가 배경이미지(자식) > 배경 그라데이션(부모) > h1(부모) 제목 순으로 포개져있음. 만약 h1에 부모요소를 넣어주지 않으면 얘는 배경 그라데이션에게 우선순위가 밀려서 보이지 않게 될거임 */
.items div h1 {
    font-size: 120px;
    font-weight: normal;
    color: #fff;
    position: relative;
    text-align: center;
    /* h1을 y축 기준으로 위로 쓱 숨기겠음. transition: 0.5s를 넣었지만 요란법썩 떨면서 등장하길래 delay도 추가함. delay의 역할은
    transition의 전환 효과의 대기시간을 설정함. 즉, 0.5초 늦게 내려오는데 그걸 0.5초만에 해라. 즉, 요란법석 떨지말고 한 번에 내려오렴 */
    transform: translateY(-200px);
    opacity: 0;
    transition: 0.5s;
    transition-delay: 0.5s;
}

.items div:nth-child(1) {
    background: url(images/photo-01.jpg) no-repeat center center fixed;
    background-size: cover;
}

.items div:nth-child(2) {
    background: url(images/photo-02.jpg) no-repeat center center fixed;
    background-size: cover;
}

.items div:nth-child(3) {
    background: url(images/photo-03.jpg) no-repeat center center fixed;
    background-size: cover;
}

.items div:nth-child(1):before,
.items div:nth-child(2):before,
.items div:nth-child(3):before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
}

.items div:nth-child(1):before {
    background: linear-gradient(135deg, gold, transparent);
}

.items div:nth-child(2):before {
    background: linear-gradient(135deg, crimson, transparent);
}

.items div:nth-child(3):before {
    background: linear-gradient(135deg, royalblue, transparent);
}

/* label 크기 정렬. label은 기본적으로 inline 태그이기 때문에, 한 줄에 하나만 배치 가능함. 그래서 width: 100% 주면 알아서 중앙으로 잘 감! */
.btn {
    position: absolute;
    /*left: 50%;
    transform: translateX(-50%);*/
    text-align: center;
    background-color: rgba(0, 0, 0, 0.3);
    width: 100%;
    height: 50px;
    line-height: 50px;
    bottom: 0;
}

.btn label {
    cursor: pointer;
    color: #fff;
    margin: 0 15px;
}

input[id=tab1]:checked~.tabs .items {
    left: 0;
}

input[id=tab2]:checked~.tabs .items {
    left: -100%;
}

input[id=tab3]:checked~.tabs .items {
    left: -200%;
}

input[id=tab1]:checked~.btn label[for=tab1],
input[id=tab2]:checked~.btn label[for=tab2],
input[id=tab3]:checked~.btn label[for=tab3] {
    color: crimson;
}

/* 숨겨놨던 h1을 짠 다시 보이도록 y축 기준으로 200px 내리겠음 */
input[id=tab1]:checked~.tabs .items div:nth-child(1) h1,
input[id=tab2]:checked~.tabs .items div:nth-child(2) h1,
input[id=tab3]:checked~.tabs .items div:nth-child(3) h1 {
    transform: translateY(200px);
    opacity: 1;
}